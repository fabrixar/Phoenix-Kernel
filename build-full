#!/bin/bash

clear

TOOLCHAIN="default"
RAMDISK="default"
CREATE_BOOTIMG="1"
MAKE_DEFCONFIG="1"
VAR=`grep processor /proc/cpuinfo | tail -1 | grep -o '[0-9]'`
NUM_THREADS=`expr $VAR + 1`
USE_MT="0"


if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
	echo "build-full V2"
	echo "written by Wolfram Hofmeister, wolfram.hofmeister@gmail.com"
	echo ""
	echo "usage: ./build-full [-option] [-use_multiple_threads]"
	echo " -s  --silent    uses default configuration"
	echo " -j  enables mutli-threading"
	echo ""
	echo "example:"
	echo "    ./build-full -s -j"
	echo "    this will compile the kernel with the default configuration and the maximum count of threads available on your machine."
	echo ""
	exit
fi

if [ "$1" == "-s" ]; then
	echo "#"
	echo "# silent configuration...";
	echo "#"
	echo ""
	TOOLCHAIN=$HOME"/CodeSourcery/Sourcery_G++_Lite/bin/arm-none-eabi-"
	CREATE_BOOTIMG="1"
	MAKE_DEFCONFIG="1"
	if [ "$2" == "-j" ]; then
		USE_MT="1"
	else
		USE_MT="0"
	fi
else
	while [ "$CHOICE" != "1" ] && [ "$CHOICE" != "2" ] && [ "$CHOICE" != "3" ]; do
		clear
		echo "Which toolchain do you want to use?";
		echo "	[1] Code Soucery G++ ARM none EABI";
		echo "	[2] Code Soucery G++ AMR Linux none GNUEBAI";
		echo "	[3] specify own toolchain path";
		echo -e -n "your choice [1]: "; 

		read CHOICE
		if [ "$CHOICE" == "" ] ; then
	  	  CHOICE=1
		fi
	done

	case $CHOICE in
		1)  echo "using: Code Soucery G++ ARM EABI";
			TOOLCHAIN=$HOME"/CodeSourcery/Sourcery_G++_Lite/bin/arm-none-eabi-";;
		2)  echo "using: Code Soucery G++ AMR Linux none GNUEBAI";
			TOOLCHAIN=$HOME"/CodeSourcery/Sourcery_G++_Lite/bin/arm-none-linux-gnueabi-";;
		3)  while [ "$CHOICE" != "y" ]; do
			echo -n "enter your toolchain path: ";
			read TOOLCHAIN;
			if grep -q "~" <<<$TOOLCHAIN; then
    				echo "please use absolute paths!"
			else
				if [ "$TOOLCHAIN" == "" ]; then
					TOOLCHAIN=$HOME"/CodeSourcery/Sourcery_G++_Lite/bin/arm-none-linux-gnueabi-"
				fi
				echo "your new toolchain is: " $TOOLCHAIN;
				echo -n "is this correct [N/Y]: ";
				read CHOICE
				if [ "$CHOICE" == "" ]; then
					CHOICE="y"
				fi
			fi
		    done;;
	esac

	echo ""

	echo -n "create boot image [N/Y]: ";
	read CHOICE
	if [ "$CHOICE" == "" ]; then
		CHOICE="y"
	fi
	if [ "$CHOICE" == "y" ]; then
		CREATE_BOOTIMG="1"
	else
		CREATE_BOOTIMG="0"
	fi

	echo ""

	echo -n "make tmobile_pulse_defconfig [N/Y]: ";
	read CHOICE
	if [ "$CHOICE" == "" ]; then
		CHOICE="y"
	fi
	if [ "$CHOICE" == "y" ]; then
		MAKE_DEFCONFIG="1"
	else
		MAKE_DEFCONFIG="0"
	fi

	echo ""

	echo -n "use multiple threads [N/Y]: ";
	read CHOICE
	if [ "$CHOICE" == "" ]; then
		CHOICE="y"
	fi
	if [ "$CHOICE" == "y" ]; then
		USE_MT="1"
	else
		USE_MT="0"
	fi
fi

echo ""
echo "configuration done..."
echo ""
echo "#"
echo "# summary"
echo "#"
echo ""
echo "toolchain: " $TOOLCHAIN
echo "create boot image = " $CREATE_BOOTIMG
echo "make tmobile_pulse_defconfig = " $MAKE_DEFCONFIG
echo "use multiple threads = " $USE_MT
if [ "$USE_MT" == "1" ]; then
	echo "    number of threads = "$NUM_THREADS
else
	echo "    number of threads = 1";
fi
echo ""
echo "compilation will start in 5 seconds."
echo "Press Ctrl - C to abort..."
echo ""
sleep 5



if [ "$MAKE_DEFCONFIG" == "1" ]; then
	make defconfig tmobile_pulse_defconfig
fi

if [ "$M_THREADS" == "1" ]; then
	make CROSS_COMPILE=$TOOLCHAIN -j$NUM_THREADS
else
	make CROSS_COMPILE=$TOOLCHAIN
fi

if [ "$CREATE_BOOTIMG" == "1" ]; then
	make bootimg
fi
